syntax = 'proto3';

package plugin;

service Plugin {
  rpc Event(EventData) returns (EventResponse);
  rpc Log(stream LogData) returns (LogResponse);
}

message EventData {
  string name = 1;
  Table fields = 2;
}

message EventResponse {}

message Field {
  oneof field {
    bool f_bool = 1;
    int64 f_integer = 2;
    double f_float = 3;
    string f_string = 4;
    Array f_array = 5;
    Table f_table = 6;
    Image f_image = 7;
  }
}

message Array {
  repeated Field items = 1;
}

message Table {
  map<string, Field> items = 1;
}

message Image {
  int64 width = 1;
  int64 height = 2;
  bytes data = 3;
}

message LogData {
  LogLevel log_level = 1;
  string location = 2;
  string message = 3;
}

enum LogLevel {
  LOG_LEVEL_UNKNOWN = 0;
  LOG_LEVEL_ERROR = 1;
  LOG_LEVEL_WARN = 2;
  LOG_LEVEL_INFO = 3;
  LOG_LEVEL_DEBUG = 4;
  LOG_LEVEL_TRACE = 5;
}

message LogResponse {
  LogLevelFilter log_level_filter = 1;
}

enum LogLevelFilter {
  LOG_LEVEL_FILTER_UNKNOWN = 0;
  LOG_LEVEL_FILTER_OFF = 1;
  LOG_LEVEL_FILTER_ERROR = 2;
  LOG_LEVEL_FILTER_WARN = 3;
  LOG_LEVEL_FILTER_INFO = 4;
  LOG_LEVEL_FILTER_DEBUG = 5;
  LOG_LEVEL_FILTER_TRACE = 6;
}
